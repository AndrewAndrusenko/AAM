11/15/2023
Fixing, refactoring, fifo triggers and PL
Allocation Trades UI : Bulk order and trade details linked to allocated trade via JSON&Dialog
DB - FIFO Triggers: Fifo triggers to for creation updated. Added restriction to add back traded transaction in order to ensure fifo sequence ;
DB && UI Creating acconting: Notification if there is no root depo account for given portfolio
Fixed currency validator => When currency list is obtained, all subscribers are notified and they trigger currency fileds validation
Trade form UI fixed issue with opening allocation tab and correctly requesting orders list for allocation adding status array for query
Reduced queries to get first opened Accounting Day
Entry Form UI: Fixed overdraft validator for entry created based on existed one. There was no need to exclude id of orginal entry from calculation
11/16/2023
Portfolio Tabs UI=> Created dynamic tab label. Portfolio code is included in the active tab label
Tree menu UI => slightly changed design and blocks Trades&Orders, Accounting have been exluded from favorite as hardore fix inside intiation function
Trade Table UI => default filter has been changed to multiFilter
Entries, Orders, Allocation Table UI => default filter has been changed to multiFilter
Orders Table => Fixed reloading and onChange behavior, taking into account table mode and the parent of the view
Entries Table UI => Blocked UI to modify trades entries linked to FIFO calculation 
--------------------------------------------------------------------------------------------
11/17-18/2023
1|| Orders Creation DB function and UI => Blocked creation of new orders with oppositie direction to the exist ones. For examlple if for any given pair portfolio - secid of potential buy order there is a sell not-accounted order then DB function f_i_o_create_orders_by_mp will generate an error message. The main issue with implementing is to generate exception in postgres function and then use the same dataset one more time to insert new orders. Using SELECT INTO in WITH clause is forbidden and to avoid duplicate query the decesion is to create temp table to store portential new orders
2|| Orders Table UI = > added status filter for retrived dataset and status filter for complex search
11/20/2023
1|| Entry Form UI: => Fixed unavaible data about expected balance in disabled form, view mode. Disable instruction was moved to ngAfterInt lifecycle hook. thus all form data has been initiated before disabling controls elements
2|| Balance sheet UI:=> planned trunovers => Fixed DB function f_a_b_bcurrent_ledger_turnovers_balances_notclosed by adding missing '*' to properly calculate negative transactions 
3|| Orders-Trades UI: => Option to book a new trade based on order data was added to orders table. Fixed creating bond trade. It was required to pass parameter to the trade form to run secidChange functions to add data regarding face value, faceunit and etc in order to calculate trade amount correctly
4___ Creating testing data to calculate time weighted rate of return
--------------------------------------------------------------------------------------------

11/21/2023
1|| Portfolios NPV historical data to calculate time weighed roi and build chart of portfolio value dynamic change => DB function created => Using balances dynamic data from function f_a_b_balancesheet_total_closed_and_notclosed() for given period we calculate portfolio npv for every date. Balances data from last closed acconting date (or from the start of the period if its closed date) to the end period copied to the temp table and is used to calculate portfolio positions (using lateral join) for every date from the period. Then using lateral join 
we get closest market price for every position
2|| Market Chart UI => restored sorting order for retrived market data to build chart correctly
3|| Allocation Table (Portfolio Trades Tab) => For portfolio trades tab modying functions are closed like creating/deleting accounting or deletion of trade

11/22/23
1|| TW roi
2|| Opening date for new depo accounts. Fist opened accounting date is used as opening date for new depo accounts
3|| Balances closed till november and reconciled. Difference rounded to 2 digts
4|| UI Accounts form => added date opeining for modying and viewing
5|| Opening date updated according to the first entry transaction date by the given account

11/23/23
1|| AutoCompleteService created functionality to notify components about arriving of secid autocomplete list 
2|| Account Form UI => Added updating of secid validity on receiving notification that secidList is ready
3|| Account Form UI => Implemented control element to modify date opening of account and modify backend accordingly
4|| Martket Prices DB function refactored (using lateral join and etc)=> As a result portfolio structure function was speeded up by 40%

11/24/23
1|| DB f_i_get_npv_dynamic_with_performance_data.sql => refactoring
2|| DB created function f_i_get_accured_interest_for_period_secidlist() to fetch coupon periods for every date with report period to calculate npv
3|| DB created function f_i_get_cross_ratesfor_period_currencylist() to fetch cross rate for every date with report period to calculate npv
--------------------------------------------------------------------------------------------

11/25-26/23
1|| DB Fixed functions: f_i_portfolios_balances_by_account_for_idportfolios.sql,f_i_get_accured_interests_for_portfolios.sql,f_i_get_cross_ratesfor_period_currencylist.sql,f_i_get_npv_dynamic_with_performance_data.sql

11/27/23
1|| DB Fix f_i_get_accrued_interest_for_period_second list and f_i_get_accrued_interests_for_portfolios. Coupon periods have been corrected. Report date have to be greater than start date since start_date equal to the end date of the previous period

11/28-30/23 
1|| Creating compound correction rate to calculate time weighted return of investment taking into account all deposits and withdrawals during investment period
2|| DB v2f_i_get_npv_dynamic_with_performance_trio refactoring, debugging and reconcile data

12/1/23
1 || DB refactored v2f_i_get_npv_dynamic_with_performance_trio and as a result execution time for maximum load dropped from 7 sec to 1 sec
2 || Tested and Verified performance data generated by v2f_i_get_npv_dynamic_with_performance_two function

12/2/23
1|| Reconcile performance data
2|| UI Trade form => developed DB function f_i_get_cross_rate_for_trade to retrive current cross rate based on user choice of base ,quote and set by dafault cross currency. Rate is used as an indicator to  reduce risk of manul error. Indirect rate calculated as 1/rate has been added in hint section of settlement rate filed to facilitate reconcile
3|| UI Currencies Table => Indirect rate has been inclueded in the table

3/12/23
1|| UI Trade form => indicative market price info and confirmation of diffrence more than 20%. Created DB function to retrive market price f_i_get_market_quote_for_trade.sql
2|| Fixed trades with testing trades with incorrect settlement and price Currencies
3|| Closed all balances till October 
--------------------------------------------------------------------------------------------

4/12/23
1|| DB refactoring cross_rate functions and implementing option to evaluate dynamic portfolio perfomance in different currencies 978,826,156,810,756 
2|| UI Account details form => refactored accounts date of opening validation based on min date as firt opened accounting day. Validation uses current date which could be in closed period until it modifed. After that event min validation moves to first opened accounting day

5/12/23
1|| DB function f_i_get_cross_ratesfor_period_currencylist has been finished and is being used to get cross rates set for report period 
2|| DB updated functions PSQL_Quaries/f_i_get_npv_dynamic.sql and PSQL_Quaries/f_i_get_portfolios_structure_detailed_data.sql to retrieve only required cross currency rates and apply them correctly
3|| UI Table to track portfolios npv dynamic perfomance, roi = > editing draft of the table

6/12/23
1|| UI Table to track portfolios npv dynamic perfomance, roi = > fully implemented with complex search, dynamic currency symbol change, excel export and formatted data
2|| UI Chart Performance analysis => Time-Weighted Rate of Return => draft of the chart 
--------------------------------------------------------------------------------------------

7/12/23
1|| UI Chart Performance analysis => Time-Weighted Rate of Return => draft of the chart 

10-11/12/23
1|| UI Chart Performance analysis implemented: 
  Custom color model for cash outs/in, 
  Dynamic labels and tooltips populating based type of data and type of transfer (deposit or withdrawal)
  Custom/dynamic yAxises: design depends on data series and current scale
  Added MarkPoints for TWR line to show max,min and the latest value of perfomance rate 
2|| UI NPV Dynamic Table => create draft

13/12/23
1|| UI NPV Dynamic Table => Implemented table with complex search and design patterns 
2|| DB & UI Profit and Loss calculation => 
  Fixed costs calculation for local bonds 
  Implemented costs and pl conversion according to the report currency value
--------------------------------------------------------------------------------------------

14/12/23
1|| UI Portfolio position => User allowed to retrieve position data passing date and report currency as parameters. The algoritm has been changed by replacing pattern of storing the whole dataset and filtering it accordingly with quering only nessesary live data 


?2|| UI Portfolio details tab => add performance chart rendering for chosen portfolio on initiliazation
?3|| DB&UI PL detail analysis => detailed data per investment has to add up to the portfolio RIO and TWR
?4|| UI Performance Chart => implement pl structure dynamic

|| Performance fee
|| Managment fee
|| High-Water Mark perfomance fee
|| Accounting for fees deduction
|| Investment restrictions
|| Check UserAccess model for UI, espesically the latest components
|| DB access roles